# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util

class SampleResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns=None):  # noqa: E501
        """SampleResponse - a model defined in OpenAPI

        :param columns: The columns of this SampleResponse.  # noqa: E501
        :type columns: List[List]
        """
        self.openapi_types = {
            'columns': List[List]
        }

        self.attribute_map = {
            'columns': 'columns'
        }

        self._columns = columns

    @classmethod
    def from_dict(cls, dikt) -> 'SampleResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SampleResponse of this SampleResponse.  # noqa: E501
        :rtype: SampleResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this SampleResponse.


        :return: The columns of this SampleResponse.
        :rtype: List[List]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this SampleResponse.


        :param columns: The columns of this SampleResponse.
        :type columns: List[List]
        """
        if columns is None:
            raise ValueError("Invalid value for `columns`, must not be `None`")  # noqa: E501

        self._columns = columns
